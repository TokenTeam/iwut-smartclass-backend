name: Development
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
jobs:
  publish:
    name: Build and push docker image
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker build and push
        run: |
          docker buildx build . \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:dev \
            --push

  deploy:
    needs: publish
    name: Deploy docker image
    environment: development
    runs-on: dev
    steps:
      - name: Docker pull
        run: |
          sudo docker pull mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:dev
      - name: Deploy with docker run
        run: |
          sudo docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker run -d --name ${{ vars.DOCKER_CONTAINER_NAME }} \
            -p ${{ vars.DOCKER_CONTAINER_PORT }}:8080 \
            -e TZ="Asia/Shanghai" \
            -e PORT="${{ vars.PORT }}" \
            -e DEBUG="${{ vars.DEBUG }}" \
            -e DATABASE="${{ secrets.DATABASE }}" \
            -e LOG_SAVE="${{ vars.LOG_SAVE }}" \
            -e SUMMARY_WORKER_COUNT="${{ vars.SUMMARY_WORKER_COUNT }}" \
            -e SUMMARY_QUEUE_SIZE="${{ vars.SUMMARY_QUEUE_SIZE }}" \
            -e TENCENT_SECRET_ID="${{ secrets.TENCENT_SECRET_ID }}" \
            -e TENCENT_SECRET_KEY="${{ secrets.TENCENT_SECRET_KEY }}" \
            -e BUCKET_URL="${{ secrets.BUCKET_URL }}" \
            -e OPENAI_ENDPOINT="${{ vars.OPENAI_ENDPOINT }}" \
            -e OPENAI_KEY="${{ secrets.OPENAI_KEY }}" \
            -e OPENAI_MODEL="${{ vars.OPENAI_MODEL }}" \
            -e INFO_SIMPLE="${{ secrets.INFO_SIMPLE }}" \
            -e GET_WEEK_SCHEDULES="${{ secrets.GET_WEEK_SCHEDULES }}" \
            -e SEARCH_LIVE_COURSE_LIST="${{ secrets.SEARCH_LIVE_COURSE_LIST }}" \
            mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_CONTAINER_NAME }}:dev
      - name: Docker image prune
        run: |
          docker image prune -a -f
